{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","LENGTH","length","ALPABET","localeCompare","reverse","App","useState","setReverse","NONE","setType","className","type","classnames","button","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKX,EAASY,QACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAM,WACjB,MAAiCC,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAA4BD,mBAAShB,EAASkB,MAA9C,mBAAOd,EAAP,KAAiBe,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,WAAW,EACX,WAAYnB,IAAaJ,EAASY,UAEpCY,QAnBe,WACrBL,EAAQnB,EAASY,UAWb,iCAYA,wBACES,KAAK,SACLG,QA9BkB,WACxBL,EAAQnB,EAASU,SA8BXU,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,WAAYnB,IAAaJ,EAASU,SANtC,4BAYA,wBACEW,KAAK,SACLD,UAAWE,IAAW,CACpBC,QAAQ,EACR,cAAc,EACd,YAAalB,IAEfmB,QAnDa,WACnBP,GAAW,SAAAQ,GAAI,OAAKA,MA2ChB,sBAYErB,IAAaJ,EAASkB,MAAQb,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVI,QAhDI,WACZP,GAAW,GACXE,EAAQnB,EAASkB,OA2CX,sBASJ,6BACGhB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CqB,KAAI,SAAAC,GAAI,OACP,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.981429c9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n\n  const reverseGoods = () => {\n    setReverse(prev => !prev);\n  };\n\n  const sortGoodsByLength = () => {\n    setType(SortType.LENGTH);\n  };\n\n  const sortGoodsAlpha = () => {\n    setType(SortType.ALPABET);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames({\n            button: true,\n            'is-info': true,\n            'is-light': sortType !== SortType.ALPABET,\n          })}\n          onClick={sortGoodsAlpha}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortGoodsByLength}\n          className={classnames({\n            button: true,\n            'is-success': true,\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames({\n            button: true,\n            'is-warning': true,\n            'is-light': !isReversed,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}